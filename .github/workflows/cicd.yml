name: Continuous Integration & Deployment

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  analyse:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Validate json/yml code style using prettier
        run: npx prettier --check "./**/*.{json,yml,md}"
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install composer dependencies
        run: composer install
      - name: Validate php code style
        run: composer lint:check

  build:
    needs: [analyse]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: user/app:latest
          build-args: |
            arg1=value1
            arg2=value2
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      # Nog veeeeeeel meer, maar uiteindelijk wordt er een image gepushed
#  test:
#    needs: [analyse]
#    runs-on: ubuntu-20.04
#    env:
#      MYSQL_USER: user
#      MYSQL_PASSWORD: password
#      MYSQL_DATABASE: test
#    services:
#      mariadb:
#      # Ik ga niet alles gratis weggeven
#    steps:
#      - uses: actions/checkout@v2
#      # Hier zit ook nog een hoop tussen
#      - run: vendor/bin/phpunit --teamcity
#        env:
#          MYSQL_HOST: 127.0.0.1:${{ job.services.mariadb.ports[3306] }}
